import 'dart:async';import 'dart:ui';import 'package:chatbot_allen/constants/color_pallet.dart';import 'package:chatbot_allen/speechProvider/spech_text_provider.dart';import 'package:chatbot_allen/view/intro_containers.dart';import 'package:chatbot_allen/view/search_section.dart';import 'package:flutter/material.dart';import 'package:flutter_svg/flutter_svg.dart';import 'package:google_fonts/google_fonts.dart';import 'package:provider/provider.dart';class HomePage extends StatefulWidget {  @override  State<HomePage> createState() => _HomePageState();}class _HomePageState extends State<HomePage> {  String spokenWords = '';  bool? isArtPrompt;  List<String> promptArray = [];  bool isResultEmpty = true;  ScrollController controller = ScrollController();  @override  void dispose() {    super.dispose();    controller.dispose();  }  @override  void initState() {    super.initState();  }  @override  Widget build(BuildContext context) {    spokenWords = Provider.of<speechTextProvider>(context).text;    isArtPrompt = Provider.of<speechTextProvider>(context).isArtPromptValue;    promptArray = Provider.of<speechTextProvider>(context).promptArray;    double width = MediaQuery.of(context).size.width;    double height = MediaQuery.of(context).size.height;    return Scaffold(  //Main AppBar of application      appBar: AppBar(        backgroundColor: Colors.white,        centerTitle: true,        surfaceTintColor: Colors.white,        title: const Text(          'ChatBot-Allen',          style: TextStyle(            fontSize: 19,            fontFamily: 'Cera Pro',            color: Colors.black,          ),        ),        leading: const Icon(Icons.menu),      ),      //Main Body Content of HomePage      body: Container(        color: Colors.white,        height: MediaQuery.of(context).size.height,        child: Column(          mainAxisAlignment: MainAxisAlignment.spaceBetween,          crossAxisAlignment: CrossAxisAlignment.center,          children: [            //Content Part            Expanded(              child: SingleChildScrollView(                controller: controller,                  child: Column(                mainAxisAlignment: MainAxisAlignment.start,                crossAxisAlignment: CrossAxisAlignment.center,                children: [                  //ChatBot-Allen Logo SVG                  Center(                    child: Container(                        margin: const EdgeInsets.only(top: 5),                        width: 120,                        height: 120,                        padding: const EdgeInsets.all(20),                        decoration: const BoxDecoration(                          shape: BoxShape.circle,                          color: Pallet.assistantCircleColor,                        ),                        child: SvgPicture.asset(                          'assets/images/robot.svg',                        )),                  ),                  //Intro-Containers for first time                  spokenWords==''?IntroContainer():ChatHistoryList(spokenWords,isArtPrompt,promptArray,width,height)                ],              )),            ),            //Search Part-            const SearchSection()          ],        ),      ),    );  }  Widget ChatHistoryList(String prompt,bool? isArtPrompt,List<String> promptArray,double width,double height){    return Container(      width: double.infinity,      margin: const EdgeInsets.symmetric(horizontal: 10).copyWith(top: 20),      child: ListView.builder(        primary: false,        shrinkWrap: true,        itemCount: promptArray.length,        itemBuilder: (context, index){          if(index%2==0){            return Container(              width: width/1.5,              margin:const EdgeInsets.only(bottom: 20,left: 80),              padding: const EdgeInsets.symmetric(horizontal: 20,vertical: 10),              decoration: BoxDecoration(                color: Colors.grey.shade900,                border: Border.all(color: Colors.grey.shade600,width: 1),                borderRadius:const BorderRadius.only(topLeft:Radius.circular(30),topRight:Radius.circular(30),bottomLeft: Radius.circular(30),bottomRight:Radius.circular(0)),              ),              child: Text(                promptArray[index].toString(),                style:GoogleFonts.openSans(                    textStyle:const TextStyle(                        fontSize: 15,                        color: Colors.white,                        fontWeight: FontWeight.normal                    )                ),              ),            );          }else{            Timer(const Duration(milliseconds: 200),(){              controller.animateTo(                controller.position.maxScrollExtent,                duration: const Duration(seconds: 1),                curve: Curves.ease,              );            });            return Container(              width: width/1.2,              margin:const EdgeInsets.only(bottom: 20,right: 35),              padding: const EdgeInsets.symmetric(horizontal: 10,vertical: 10).copyWith(bottom: 15),              alignment: Alignment.centerLeft,              decoration: BoxDecoration(                color: Colors.white,                border: Border.all(color: Colors.grey.shade600,width: 1),                borderRadius:const BorderRadius.only(topLeft:Radius.circular(0),topRight:Radius.circular(30),bottomLeft: Radius.circular(30),bottomRight:Radius.circular(30)),              ),              child: Text(                promptArray[index].toString().trim().replaceAll("*", "").replaceAll("#", ""),                textAlign: TextAlign.start,                style:GoogleFonts.openSans(                    textStyle:const TextStyle(                        fontSize: 15,                        color: Colors.black,                        fontWeight: FontWeight.normal                    )                ),              ),            );          }        },      ),    );  }}