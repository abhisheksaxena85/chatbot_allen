import 'dart:async';import 'package:chatbot_allen/respository/gemini_services.dart';import 'package:chatbot_allen/speechProvider/spech_text_provider.dart';import 'package:chatbot_allen/view/intro_containers.dart';import 'package:chatbot_allen/view/search_section.dart';import 'package:flutter/material.dart';import 'package:google_fonts/google_fonts.dart';import 'package:provider/provider.dart';class HomePage extends StatefulWidget {  @override  State<HomePage> createState() => _HomePageState();}class _HomePageState extends State<HomePage> {  String spokenWords = '';  List<String> promptArray = [];  bool isResultEmpty = true;  ScrollController controller = ScrollController();  GeminiAIService service = GeminiAIService();  @override  void dispose() {    super.dispose();    controller.dispose();  }  @override  void initState() {    super.initState();  }  @override  Widget build(BuildContext context) {    spokenWords = Provider.of<speechTextProvider>(context).text;    promptArray = Provider.of<speechTextProvider>(context).promptArray;    double width = MediaQuery.of(context).size.width;    double height = MediaQuery.of(context).size.height;    return Scaffold(      //Main AppBar of application      appBar: AppBar(        backgroundColor: Colors.white,        centerTitle: true,        surfaceTintColor: Colors.white,        title: const Text(          'ChatBot-Allen',          style: TextStyle(            fontSize: 19,            fontFamily: 'Cera Pro',            color: Colors.black,          ),        ),        actions: [          IconButton(              tooltip: "New Page",              onPressed: () {                promptArray.clear();                setState(() {});              },icon: const Icon(              Icons.add)),        ],      ),      //Main Body Content of HomePage      body: Container(        color: Colors.white,        height: MediaQuery.of(context).size.height,        child: Column(          mainAxisAlignment: MainAxisAlignment.spaceBetween,          crossAxisAlignment: CrossAxisAlignment.center,          children: [            //Content Part            Expanded(              child: SingleChildScrollView(                  controller: controller,                  child: Column(                    mainAxisAlignment: MainAxisAlignment.start,                    crossAxisAlignment: CrossAxisAlignment.center,                    children: [                      //ChatBot-Allen Logo SVG                      Center(                        child: Container(                            margin: const EdgeInsets.only(top: 5),                            width: 120,                            height: 120,                            decoration: const BoxDecoration(                              shape: BoxShape.circle,                            ),                            child: Image.asset(                              'assets/images/logo_round.png',                            )),                      ),                      //Intro-Containers for first time                      spokenWords == ''                          ? IntroContainer()                          : ChatHistoryList(spokenWords,                              promptArray, width, height)                    ],                  )),            ),            //Search Part-            const SearchSection()          ],        ),      ),    );  }  Widget ChatHistoryList(String prompt, List<String> promptArray, double width, double height) {    List<String> value = Provider.of<speechTextProvider>(context,listen: false).streamData;    return Container(      width: double.infinity,      margin: const EdgeInsets.symmetric(horizontal: 10).copyWith(top: 20),      child: ListView.builder(        primary: false,        shrinkWrap: true,        itemCount: promptArray.length,        itemBuilder: (context, index) {          if (index % 2 == 0) {            return Container(              width: width / 1.5,              margin: const EdgeInsets.only(bottom: 20, left: 80),              padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),              decoration: BoxDecoration(                color: Colors.grey.shade900,                border: Border.all(color: Colors.grey.shade600, width: 1),                borderRadius: const BorderRadius.only(                    topLeft: Radius.circular(30),                    topRight: Radius.circular(30),                    bottomLeft: Radius.circular(30),                    bottomRight: Radius.circular(0)),              ),              child: Text(                promptArray[index].toString(),                style: GoogleFonts.openSans(                    textStyle: const TextStyle(                        fontSize: 15,                        color: Colors.white,                        fontWeight: FontWeight.normal)),              ),            );          } else {            Timer(const Duration(milliseconds: 200), () {              controller.animateTo(                controller.position.maxScrollExtent,                duration: const Duration(seconds: 1),                curve: Curves.ease,              );            });            return Container(              width: width / 1.2,              margin: const EdgeInsets.only(bottom: 20, right: 35),              padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 10)                  .copyWith(bottom: 15),              alignment: Alignment.centerLeft,              decoration: BoxDecoration(                color: Colors.white,                border: Border.all(color: Colors.grey.shade600, width: 1),                borderRadius: const BorderRadius.only(                    topLeft: Radius.circular(0),                    topRight: Radius.circular(30),                    bottomLeft: Radius.circular(30),                    bottomRight: Radius.circular(30)),              ),              child: Text(                value.toString()                    .trim()                    .replaceAll("*", "")                    .replaceAll("#", ""),                textAlign: TextAlign.start,                style: GoogleFonts.openSans(                    textStyle: const TextStyle(                        fontSize: 15,                        color: Colors.black,                        fontWeight: FontWeight.normal)),              ),            );          }        },      ),    );  }}